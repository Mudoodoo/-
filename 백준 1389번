import sys
from collections import deque

input = sys.stdin.readline
n, m = map(int, input().split())
graph = [[] for _ in range(n+1)]

for _ in range(m):
  a, b = map(int, input().split())
  graph[a].append(b)
  graph[b].append(a)

def bfs(start):
  cnt = [0] * (n+1)
  visited = [False] * (n+1)
  queue = deque([start])
  visited[start] = True

  while queue:
    v = queue.popleft()
    for data in graph[v]:
      if not visited[data]:
        queue.append(data)
        visited[data] = True
        cnt[data] = cnt[v] + 1

  return sum(cnt)

minIdx = 0
minValue = sys.maxsize
for i in range(1, n+1):
  if bfs(i) < minValue:
    minValue = bfs(i)
    minIdx = i

print(minIdx)
