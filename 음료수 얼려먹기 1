import sys
from collections import deque

n, m = map(int, input().split())
icebox = []
for _ in range(n):
  icebox.append(list(map(int, sys.stdin.readline().rstrip())))
dx = [-1, 0, 1, 0]
dy = [0, -1, 0, 1]
result = 0

def bfs(startX, startY):
  global result
  
  if icebox[startX][startY] == 1 or icebox[startX][startY] == 2:
    return
  queue = deque([[startX, startY]])
  while True:
    if len(queue) == 0:
      result += 1
      break
    x, y = queue.popleft()
    if icebox[x][y] == 1 or icebox[x][y] == 2:
      continue
    else:
      icebox[x][y] = 2
      for i in range(4):
        nx = x + dx[i]
        ny = y + dy[i]
        if nx < 0 or ny < 0 or nx >= n or ny >= m:
          continue
        else:
          queue.append([nx, ny])

for i in range(n):
  for j in range(m):
    bfs(i, j)

print(result)
